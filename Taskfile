#!/bin/bash

# Run your tasks like: run <task>
# alias run=./Taskfile

PATH=./node_modules/.bin:$PATH

function deps {
    dep ensure -update
}

function clean_flipadelphia {
    local findopts=". -regextype awk -regex ".*flipadelphia$" -type f -executable -delete"
    if [[ -f "$(which gfind)" ]]; then
        gfind $findopts
      else
        find $findopts
    fi
}

function clean_flippy {
    local findopts=". -regextype awk -regex ".*flippy$" -type f -executable -delete"
    if [[ -f "$(which gfind)" ]]; then
        gfind $findopts
    else
        find $findopts
    fi
}

function clean {
    clean_flipadelphia
    clean_flippy
}

function build {
    clean_flipadelphia
    FLIPADELPHIA_BUILD_VERSION=$(git rev-parse --verify HEAD) go build -v
}

function build_flippy {
    clean_flippy
    go build -v ./cmd/flippy
}

function doc {
    godoc -http=:${1:-8888} -index
}

function start {
    local args=$@
    [[ ! -e $PWD/flipadelphia ]] && build
    if [[ "$args" == "" ]]; then
        [[ ! -e $HOME/.flipadelphia/config.json ]] && args="-c $PWD/config/config.example.json"
    fi
    ./flipadelphia $args
}

function vet {
    go vet
}

function install {
    local bindir=${1:-${GOPATH}/bin}
    build
    mv ./flipadelphia $bindir
    build_flippy
    mv ./flippy $bindir
}

function test {
    go test -v `find . -maxdepth 1 -type d -execdir echo ./{}/... \;| egrep -v '(vendor|\.git|\.idea|\./\./\.\.\.$|docker)'`
}

function debug {
    local args=$@
    if [[ "$args" == "" ]]; then
        [[ ! -e $HOME/.flipadelphia/config.json ]] && args="-c $PWD/config/config.example.json"
    fi
    go build && dlv exec ./flipadelphia
}

function default {
    start
}

function help {
    echo "$0 <task> <args>"
    echo "Tasks:"
    compgen -A function | cat -n
}

TIMEFORMAT="Task completed in %3lR"
time ${@:-default}
# vim: set ts=2 sw=4 tw=120 ft=sh noet :
